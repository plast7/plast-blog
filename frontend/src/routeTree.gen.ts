/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as StarImport } from './routes/star'
import { Route as LoginImport } from './routes/login'
import { Route as IndexImport } from './routes/index'
import { Route as PostPostIdImport } from './routes/post/$postId'
import { Route as CategoryCategoryNameImport } from './routes/category/$categoryName'

// Create/Update Routes

const StarRoute = StarImport.update({
  path: '/star',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const PostPostIdRoute = PostPostIdImport.update({
  path: '/post/$postId',
  getParentRoute: () => rootRoute,
} as any)

const CategoryCategoryNameRoute = CategoryCategoryNameImport.update({
  path: '/category/$categoryName',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/star': {
      id: '/star'
      path: '/star'
      fullPath: '/star'
      preLoaderRoute: typeof StarImport
      parentRoute: typeof rootRoute
    }
    '/category/$categoryName': {
      id: '/category/$categoryName'
      path: '/category/$categoryName'
      fullPath: '/category/$categoryName'
      preLoaderRoute: typeof CategoryCategoryNameImport
      parentRoute: typeof rootRoute
    }
    '/post/$postId': {
      id: '/post/$postId'
      path: '/post/$postId'
      fullPath: '/post/$postId'
      preLoaderRoute: typeof PostPostIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/star': typeof StarRoute
  '/category/$categoryName': typeof CategoryCategoryNameRoute
  '/post/$postId': typeof PostPostIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/star': typeof StarRoute
  '/category/$categoryName': typeof CategoryCategoryNameRoute
  '/post/$postId': typeof PostPostIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/login': typeof LoginRoute
  '/star': typeof StarRoute
  '/category/$categoryName': typeof CategoryCategoryNameRoute
  '/post/$postId': typeof PostPostIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/login'
    | '/star'
    | '/category/$categoryName'
    | '/post/$postId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/login' | '/star' | '/category/$categoryName' | '/post/$postId'
  id:
    | '__root__'
    | '/'
    | '/login'
    | '/star'
    | '/category/$categoryName'
    | '/post/$postId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LoginRoute: typeof LoginRoute
  StarRoute: typeof StarRoute
  CategoryCategoryNameRoute: typeof CategoryCategoryNameRoute
  PostPostIdRoute: typeof PostPostIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LoginRoute: LoginRoute,
  StarRoute: StarRoute,
  CategoryCategoryNameRoute: CategoryCategoryNameRoute,
  PostPostIdRoute: PostPostIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/login",
        "/star",
        "/category/$categoryName",
        "/post/$postId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/star": {
      "filePath": "star.tsx"
    },
    "/category/$categoryName": {
      "filePath": "category/$categoryName.tsx"
    },
    "/post/$postId": {
      "filePath": "post/$postId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */

name: Deploy to Cloud Run

on:
  push:
    branches:
      - main  # 배포를 트리거할 브랜치

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v3

      # 2. GCP SDK 설정
      - name: Setup GCP SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT }}  # GCP 프로젝트 ID
          service_account_key: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}  # 서비스 계정 키
          export_default_credentials: true

      # 3. Artifact Registry를 위한 Docker 인증 설정
      - name: Configure Docker for Artifact Registry
        run: |
          echo ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }} | docker login -u _json_key --password-stdin https://asia-northeast3-docker.pkg.dev

      # 4. Docker 이미지 빌드
      - name: Build Docker image
        run: |
          cd backend/plast-blog  # Dockerfile이 위치한 디렉토리로 이동
          docker build -t plast-blog .

      # 5. Docker 이미지 태그 지정
      - name: Tag Docker image
        run: |
          docker tag plast-blog asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/docker-repo/plast-blog:latest

      # 6. Docker 이미지 Artifact Registry에 푸시
      - name: Push Docker image to Artifact Registry
        run: |
          docker push asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/docker-repo/plast-blog:latest

      # 7. Cloud Run에 배포
      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy plast-blog \
            --image asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/docker-repo/plast-blog:latest \
            --region asia-northeast3 \
            --platform managed \
            --allow-unauthenticated

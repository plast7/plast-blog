name: Deploy to GCP Cloud Run

on:
  push:
    branches:
      - main  # 배포를 트리거할 브랜치

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      with:
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        export_default_credentials: true

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'  # 원하는 Python 버전으로 설정

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "${HOME}/.local/bin" >> $GITHUB_PATH

    - name: Verify Poetry Installation
      run: poetry --version
      working-directory: backend/plast-blog

    - name: Install Dependencies
      run: poetry install --no-root --no-interaction --no-ansi
      working-directory: backend/plast-blog

    - name: Collect static files
      run: poetry run python manage.py collectstatic --noinput
      working-directory: backend/plast-blog

    - name: List files (디버깅용)
      run: ls -la
      working-directory: backend/plast-blog

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy plast-blog \
          --region asia-northeast3 \
          --platform managed \
          --source . \
          --allow-unauthenticated \
          --quiet \
          --set-env-vars SECRET_KEY=${{ secrets.SECRET_KEY }},DB_HOST=${{ secrets.DB_HOST }},DB_PORT=${{ secrets.DB_PORT }},DB_NAME=${{ secrets.DB_NAME }},DB_USER=${{ secrets.DB_USER }},DB_PASSWORD=${{ secrets.DB_PASSWORD }}
      working-directory: backend/plast-blog
